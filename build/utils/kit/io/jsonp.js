steel.d("utils/kit/extra/merge",[],function(t,e,n){STK.register("utils.kit.extra.merge",function(t){return function(t,e){var n={};for(var i in t)n[i]=t[i];for(var i in e)n[i]=e[i];return n}})}),steel.d("utils/kit/io/jsonp",["utils/kit/extra/merge"],function(t,e,n){t("utils/kit/extra/merge"),STK.register("utils.kit.io.jsonp",function(t){return function(e){var n,i,r,o,u;n=t.parseParam({url:"",method:"get",responseType:"json",varkey:"_v",timeout:3e4,onComplete:t.funcEmpty,onTraning:t.funcEmpty,onFail:t.funcEmpty,isEncode:!0},e),r=[],o={},u=!1;var s=function(){r.length&&u!==!0&&(u=!0,o.args=r.shift(),o.onComplete=function(t){u=!1,n.onComplete(t,o.args),setTimeout(s,0)},o.onFail=function(t){u=!1,n.onFail(t),setTimeout(s,0)},t.jsonp(t.utils.kit.extra.merge(n,{args:o.args,onComplete:function(t){o.onComplete(t)},onFail:function(t){try{o.onFail(t)}catch(e){}}})))};return i={},i.request=function(t){t=t||{},t.superuid||!!$CONFIG.superuid&&(t.superuid=$CONFIG.superuid),t||(t={}),r.push(t),t._t=1,s()},i.abort=function(t){for(;r.length;)r.shift();u=!1,o=null},i}})});