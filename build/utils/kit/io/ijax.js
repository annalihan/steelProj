steel.d("utils/kit/extra/merge",[],function(r,e,t){STK.register("utils.kit.extra.merge",function(r){return function(r,e){var t={};for(var i in r)t[i]=r[i];for(var i in e)t[i]=e[i];return t}})}),steel.d("utils/kit/io/ijax",["utils/kit/extra/merge"],function(r,e,t){r("utils/kit/extra/merge"),STK.register("utils.kit.io.ijax",function(r){return function(e){var t,i,u,n,a,o,l;t=r.parseParam({url:"",timeout:3e4,isEncode:!0,abaurl:null,responseName:null,varkey:"callback",abakey:"callback"},e),o=function(r,i){a=!1,e.onComplete(r,t.form,i),t.form=null,t.args=null,setTimeout(s,0)},l=function(r,i){a=!1,e.onFail(r,t.form,i),t.form=null,t.args=null,setTimeout(s,0)},u=[],n=null,a=!1,t.onComplete=o,t.onFail=l;var s=function(){var e;u.length&&a!==!0&&(a=!0,e=u.shift(),t.args=e.args,t.form=e.form,n=r.ijax(t))},f=function(r){for(;u.length;)u.shift();if(a=!1,n)try{n.abort()}catch(e){}n=null};return i={},i.request=function(t,i){if(i=i||{},i.superuid||!!$CONFIG.superuid&&(i.superuid=$CONFIG.superuid),!r.isNode(t))throw"[kit.io.ijax.request] need a form as first parameter";i||(i={}),e.noQueue&&f(),u.push({form:t,args:i}),s()},i.abort=f,i}})});